
name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '14'
      

    - name: Install dependencies
      run: npm install
      

    - name: Build
      run: npm run build
      

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build
        path: ./build
      

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install

    - name: Run unit tests
      run: npm test
      

    - name: Run code analysis
      run: npm run lint
      

    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: ./test-results
      

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: test
    if: success()
    

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment..."
        ./deploy.sh
      

  notify:
    name: Notify
    runs-on: ubuntu-latest
    needs: [build, test, deploy]
    if: failure()
    

    steps:
    - name: Send Slack notification
      uses: rtCamp/action-slack-notify@v2
      with:
        status: failure
        fields: >
          {
            "title": "CI/CD Pipeline Status",
            "text": "Build or Deployment failed. Please check the logs for details."
          }
        slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
      
